datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  binaryTargets   = "native"
  previewFeatures = ["clientExtensions"]
}

model Tenant {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @unique

  posts Post[]
  users User[]
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  username String @unique

  hashedPassword String
  salt           String

  resetToken          String?
  resetTokenExpiresAt DateTime?

  posts Post[]

  tenant   Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  tenantId String @default(dbgenerated("(current_setting('app.tenantId'::text))::uuid"))
}

model Post {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title String
  body  String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @default(dbgenerated("(current_setting('app.userId'::text))::uuid"))

  tenant   Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  tenantId String @default(dbgenerated("(current_setting('app.tenantId'::text))::uuid"))
}
